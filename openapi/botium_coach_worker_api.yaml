openapi: "3.0.0"

info:
  title: Botium Coach Worker API
  version: "1.0"
  license:
    name: MIT
servers:
  - url: /1.0
paths:
  /ping:
    get:
      summary: Ping
      operationId: api.embeddings.ping
      security:
        - api_key: []
      responses:
        200:
          description: ping response
          content:
            text/plain:
              schema:
                type: string
  /static/translation:
    post:
      summary: Translate a sentence
      operationId: api.translation.translate
      security:
        - api_key: []
      requestBody:
        description: Sentence
        required: true
        content:
          application/json:
            schema:
              x-body-name: translationRequest
              $ref: "#/components/schemas/TranslationRequest"
            example:
              language_from: en_GB
              language_to: de_DE
              sentence: Nice to meet you
      responses:
        '200':
          description: Embeddings and statistics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Translations"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /static/fact_check/create_pinecone_index:
    post:
      summary: Create Pinceone index to store word embeddings
      operationId: api.factcheck.create_pinecone_index
      security:
        - api_key: []
      requestBody:
        description: Create Pinceone index
        required: true
        content:
          application/json:
            schema:
              x-body-name: CreatePineconeIndexRequest
              $ref: "#/components/schemas/CreatePineconeIndexRequest"
            example:
              factcheckSessionId: test-factcheck-session-id
              boxEndpoint: 'http://localhost:4000/api/coach'
              index: botium-box-index
              environment: gcp-starter
      responses:
        '200':
          description: Returns True/False if index has been successfully created on Pinecone with message
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /static/fact_check/upload_document:
    post:
      summary: Store embeddings for "ground truth" documentation in Pinceone
      operationId: api.factcheck.upload_factcheck_documents
      security:
        - api_key: []
      requestBody:
        description: Store embeddings for "ground truth" documentation in Pinceone
        required: true
        content:
          application/json:
            schema:
              x-body-name: UploadFactcheckDocumentRequest
              $ref: "#/components/schemas/UploadFactcheckDocumentRequest"
            example:
              factcheckSessionId: test-factcheck-session-id
              boxEndpoint: 'http://localhost:4000/api/coach'
              index: botium-box-index
              environment: gcp-starter
              namespace: client1-project1
              filepath: docs
      responses:
        '200':
          description: Returns True or False if documents have been successfully uploaded to Pinecone with message
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /static/fact_check:
    post:
      summary: Fact-check a statement
      operationId: api.factcheck.factcheck
      security:
        - api_key: []
      requestBody:
        description: Statement to be fact checked
        required: true
        content:
          application/json:
            schema:
              x-body-name: factcheckRequest
              $ref: "#/components/schemas/FactcheckRequest"
            example:
              factcheckSessionId: test-factcheck-session-id
              boxEndpoint: 'http://localhost:4000/api/coach'
              index: botium-box-index
              environment: gcp-starter
              namespace: client1-project1
              statement: The sky is blue
      responses:
        '200':
          description: Returns Ture/False on fact checked with edited statement and reasoning
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /static/calculate_embeddings:
    post:
      summary: Calculate word embedding statistics on a data set
      operationId: api.embeddings.calculate_embeddings
      security:
        - api_key: []
      requestBody:
        description: Botium data set with user examples
        required: true
        content:
          application/json:
            schema:
              x-body-name: embeddingsRequest
              $ref: "#/components/schemas/EmbeddingsRequest"
            example:
              coachSessionId: 'hfkajdhkab4r2brqb2e'
              boxEndpoint: 'http://localhost:4000/api/coach'
              filter:
                minsimilarity: 0.5
                maxxgrams: 8
              intents:
                - name: INSURANCE.VIEW_CLAIM_STATUS
                  examples:
                    - Is it possible to know the progress of my insurance claim?
                    - The status still in pending for like 3 weeks
                    - What is the date of approval?
                    - What is the progress on my claim?
                    - When do I get my money?
                    - When my claim is gonna be processed?
                    - When was the claim approved?
                    - Where is my money?
                    - Which information do I need to provide to check my claim's status?
                    - Would it be possible to know claim status over a call?
                    - Give me info about my current claim.
                    - Do my claim proceed further?
                    - Can you tell me the progress on my case?
                    - Has a decision been reached?
                    - Help me to know if there is an update for my claim
                    - How to check health insurance claim status online?
                    - I need the money immediately, can they approve it quickly?
                    - I want new information about my claim
                    - I want to know if my claim has been rejected.
                    - It seems the status is stills at pending
                - name: INSURANCE.VIEW_INSURANCE_ID
                  examples:
                    - Can you email me poi?
                    - Where can I view my insurance id?
                    - Where can I see proof of insurance?
                    - Where can I get my insurance id?
                    - What is link to download proof of insurance?
                    - Is there a way to get poi?
                    - Is there a toll-free number where I can get help on my insurance id?
                    - I'd like to see poi
                    - I want to know information about poi
                    - I need information of poi
                    - How to view poi?
                    - How can I find poi?
                    - Do you know from where I can download poi card?
                    - Can you please show me poi?
                    - Can you please provide details of poi?
                    - Can you assist me to get poi?
                    - Can my agent give me my poi?
                    - Can I get my poi on my mobile?
                    - Where can get details for proof of insurance?
                    - Can you please give me poi?
                - name: INSURANCE.VIEW_POLICY
                  examples:
                    - Please show me my policy
                    - I would prefer to view the contents of the contract
                    - I want to look at policy terms.
                    - How do I download the policy to see?
                    - Can you please show me my insurance policy?
                    - Can I view the details of the agreement?
                    - Show policy
                    - See contract
                    - Read contract
                    - Pull up my policy please
                    - List all risks
                    - What is the start date of insurance?
                    - What's in my plan?
                    - What's the full amount of things which the plan covers?
                    - Where is the contract for insurance?
                    - What is the expiration date of my health insurance?
                    - What is link to download insurance policy?
                    - View policy
                    - Terms and conditions info.
                    - Tell me everything is covered
      responses:
        '201':
          description: Embeddings Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmbeddingsResponse"
              example:
                status': 'queued'
                coachSessionId: hfkajdhkab4r2brqb2e,
                boxEndpoint: 'http://localhost:4000/api/coach'
                workerEndpoint: 'coach-worker-17'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-Auth
      in: header
      x-apikeyInfoFunc: api.shared.apikey_auth
  schemas:
    EmbeddingsRequest:
      required:
        - coachSessionId
        - boxEndpoint
        - filter
        - intents
      properties:
        coachSessionId:
          type: string
        boxEndpoint:
          type: string
        filter:
          required:
            - minsimilarity
          properties:
            minsimilarity:
              type: number
            maxxgrams:
              type: number
        intents:
          $ref: "#/components/schemas/Intents"
    Intent:
      required:
        - name
        - examples
      properties:
        name:
          type: string
        examples:
          type: array
          items:
            type: string
    Intents:
      type: array
      items:
        $ref: "#/components/schemas/Intent"
    EmbeddingsResponse:
      properties:
        status:
          type: string
        coachSessionId:
          type: string
        boxEndpoint:
          type: string
        workerEndpoint:
          type: string
    Embeddings:
      properties:
        embeddings:
          type: array
          items:
            properties:
              name:
                type: string
              examples:
                type: array
                items:
                  properties:
                    phrase:
                      type: string
                    x:
                      type: number
                    y:
                      type: number
        similarity:
          type: array
          items:
            properties:
              name1:
                type: string
              example1:
                type: string
              name2:
                type: string
              example2:
                type: string
              similarity:
                type: number
        cohesion:
          type: array
          items:
            properties:
              name:
                type: string
              cohesion:
                type: number
        separation:
          type: array
          items:
            properties:
              name1:
                type: string
              name2:
                type: string
              separation:
                type: number
        chi2:
          type: array
          items:
            properties:
              name:
                type: string
              unigrams:
                type: array
                items:
                  type: string
              bigrams:
                type: array
                items:
                  type: string
        chi2_ambiguous_unigrams:
          type: array
          items:
            properties:
              name1:
                type: string
              name2:
                type: string
              keyword:
                type: string
        chi2_ambiguous_bigrams:
          type: array
          items:
            properties:
              name1:
                type: string
              name2:
                type: string
              keyword:
                type: string
        chi2_similarity:
          type: array
          items:
            properties:
              name1:
                type: string
              example1:
                type: string
              name2:
                type: string
              example2:
                type: string
              similarity:
                type: number
    TranslationRequest:
      required:
        - language_from
        - language_to
        - sentence
      properties:
        language_from:
          type: string
        language_to:
          type: string
        model:
          type: string
        sentence:
          type: string
    CreatePineconeIndexRequest:
      required:
        - factcheckSessionId
        - boxEndpoint
        - index
        - environment
      properties:
        factcheckSessionId:
          type: string      
        boxEndpoint:
          type: string
        index:
          type: string
        environment:
          type: string
    UploadFactcheckDocumentRequest:
      required:
        - factcheckSessionId
        - boxEndpoint
        - index
        - environment
        - namespace
        - filepath
      properties:
        factcheckSessionId:
          type: string
        boxEndpoint:
          type: string
        index:
          type: string
        environment:
          type: string
        namespace:
          type: string
        filepath:
          type: string
    FactcheckRequest:
      required:
        - factcheckSessionId
        - boxEndpoint
        - index
        - environment
        - namespace
        - statement
      properties:
        factcheckSessionId:
          type: string      
        boxEndpoint:
          type: string
        index:
          type: string
        environment:
          type: string
        namespace:
          type: string
        statement:
          type: string
    Translations:
      properties:
        translation:
          type: string
        provider:
          type: string
    JobAdded:
      properties:
        status:
          type: string
        coachSessionId:
          type: string
        boxEndpoint:
          type: string
        workerEndpoint:
          type: string
    Error:
      required:
        - message
      properties:
        message:
          type: string
